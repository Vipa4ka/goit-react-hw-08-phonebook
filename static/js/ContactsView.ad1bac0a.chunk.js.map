{"version":3,"sources":["components/ContactList/ContactList.js","components/ContactForm/ContactForm.js","components/Filter/Filter.js","views/ContactsView.js","views/views.module.css","components/ContactList/ContactList.module.scss","components/ContactForm/ContactForm.module.scss","components/Filter/Filter.module.scss"],"names":["connect","state","contacts","contactsSelectors","getVisibleContacts","dispatch","onDeleteContacts","id","contactsOperations","deleteContacts","className","styles","ul","map","name","number","li","button","type","onClick","getAllContacts","isLoading","getLoading","onSubmit","addContacts","useState","setName","setNumber","handleChange","e","target","value","preventDefault","container","label","htmlFor","uuidv4","input","onChange","pattern","title","disabled","required","getFilter","changeFilter","ContactsView","params","useDispatch","isLoadingContacts","useSelector","isError","getError","useEffect","fetchContacts","Container","ContactsViewBarStyles","Alert","severity","module","exports"],"mappings":"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","file":"static/js/ContactsView.ad1bac0a.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './ContactList.module.scss';\nimport { connect } from 'react-redux';\n\nimport { contactsOperations, contactsSelectors } from '../../redux/contacts';\n\nconst ContactList = ({ contacts, onDeleteContacts }) => {\n  return (\n    <ul className={styles.ul}>\n      {contacts.map(({ id, name, number }) => (\n        <li className={styles.li} name={name} key={id}>\n          {name}: {number}\n          <button\n            className={styles.button}\n            type=\"button\"\n            onClick={() => onDeleteContacts(id)}\n          >\n            Delete\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n    }).isRequired,\n  ).isRequired,\n  onDeleteContacts: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = state => ({\n  contacts: contactsSelectors.getVisibleContacts(state),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onDeleteContacts: id => dispatch(contactsOperations.deleteContacts(id)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\n","import { useState } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport PropTypes from 'prop-types';\nimport styles from './ContactForm.module.scss';\nimport { connect } from 'react-redux';\nimport { contactsOperations } from '../../redux/contacts';\nimport { contactsSelectors } from '../../redux/contacts';\nfunction ContactForm({ contacts, isLoading, onSubmit }) {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handleChange = e => {\n    const { name, value } = e.target;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n\n      case 'number':\n        setNumber(value);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    onSubmit(name, number);\n    reset();\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <div className={styles.container}>\n        <label className={styles.label} htmlFor={uuidv4()}>\n          Name{' '}\n          <input\n            className={styles.input}\n            type=\"text\"\n            name=\"name\"\n            value={name}\n            id={uuidv4()}\n            onChange={handleChange}\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            disabled={isLoading}\n            required\n          />\n        </label>\n        <label className={styles.label}>\n          Number\n          <input\n            id={uuidv4()}\n            className={styles.input}\n            type=\"tel\"\n            name=\"number\"\n            value={number}\n            onChange={handleChange}\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n            disabled={isLoading}\n            required\n          />\n        </label>\n      </div>\n\n      <button type=\"submit\">Add contact</button>\n    </form>\n  );\n}\n\nContactForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = state => ({\n  contacts: contactsSelectors.getAllContacts(state),\n  isLoading: contactsSelectors.getLoading(state),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onSubmit: (name, number) =>\n    dispatch(contactsOperations.addContacts(name, number)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './Filter.module.scss';\nimport { connect } from 'react-redux';\nimport { contactsSelectors, changeFilter } from '../../redux/contacts';\n\nconst Filter = ({ value, onChange }) => (\n  <div>\n    <h2 className={styles.title}>Contacts</h2>\n    <label className={styles.label}>\n      Find contacts by name\n      <input\n        className={styles.input}\n        type=\"text\"\n        value={value}\n        onChange={onChange}\n      />\n    </label>\n  </div>\n);\n\nFilter.propTypes = {\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = state => ({\n  value: contactsSelectors.getFilter(state),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onChange: e => dispatch(changeFilter(e.target.value)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Alert from '@material-ui/lab/Alert';\n\nimport Container from '../components/Container';\nimport ContactList from '../components/ContactList';\nimport ContactForm from '../components/ContactForm';\n// import TodoEditor from '../components/TodoEditor';\nimport Filter from '../components/Filter';\nimport styles from './views.module.css';\n\n// import IconButton from '../components/IconButton';\n\nimport { contactsOperations, contactsSelectors } from '../redux/contacts';\n\nexport default function ContactsView(params) {\n  const dispatch = useDispatch();\n  // const isLoadingContacts = useSelector(contactsSelectors.getLoading);\n  const isLoadingContacts = useSelector(state =>\n    contactsSelectors.getLoading(state),\n  );\n\n  const isError = useSelector(state => contactsSelectors.getError(state));\n\n  useEffect(() => dispatch(contactsOperations.fetchContacts()), [dispatch]);\n\n  return (\n    <Container>\n      <ContactForm />\n      <div className={styles.ContactsViewBarStyles}>\n        <Filter />\n\n        <ContactList />\n\n        {isLoadingContacts && <h1>Loading...</h1>}\n\n        {isError && <Alert severity=\"error\">{isError}</Alert>}\n      </div>\n    </Container>\n  );\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"HomeViewContainer\":\"views_HomeViewContainer__3jPsx\",\"HomeViewTitleP\":\"views_HomeViewTitleP__39BCG\",\"HomeViewTitleH\":\"views_HomeViewTitleH__36NGs\",\"viewForm\":\"views_viewForm__q6L-Q\",\"viewLabel\":\"views_viewLabel__1SVO_\",\"viewContainer\":\"views_viewContainer__12sf9\",\"viewInput\":\"views_viewInput__3vrsc\",\"ContactsViewBarStyles\":\"views_ContactsViewBarStyles__HkRd2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"li\":\"ContactList_li___DVp4\",\"ul\":\"ContactList_ul__3-wI9\",\"button\":\"ContactList_button__1vHKq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"ContactForm_label__RswVe\",\"input\":\"ContactForm_input__22ZDe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__3Hdua\",\"input\":\"Filter_input__iabIq\"};"],"sourceRoot":""}