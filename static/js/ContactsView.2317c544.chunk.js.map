{"version":3,"sources":["components/ContactList/ContactList.module.scss","components/Filter/Filter.module.scss","components/ContactList/ContactList.js","components/Filter/Filter.js","views/ContactsView.js"],"names":["module","exports","connect","state","contacts","contactsSelectors","getVisibleContacts","dispatch","onDeleteContacts","id","contactsOperations","deleteContacts","className","styles","ul","map","name","number","li","button","type","onClick","value","getFilter","onChange","e","changeFilter","target","label","input","barStyles","display","alignItems","marginBottom","ContactsView","params","useDispatch","isLoadingContacts","useSelector","getLoading","useEffect","fetchContacts","Container","style"],"mappings":"kIACAA,EAAOC,QAAU,CAAC,GAAK,wBAAwB,GAAK,wBAAwB,OAAS,8B,mBCArFD,EAAOC,QAAU,CAAC,MAAQ,sBAAsB,MAAQ,wB,0ICyCzCC,eARS,SAAAC,GAAK,MAAK,CAChCC,SAAUC,IAAkBC,mBAAmBH,OAGtB,SAAAI,GAAQ,MAAK,CACtCC,iBAAkB,SAAAC,GAAE,OAAIF,EAASG,IAAmBC,eAAeF,QAGtDP,EApCK,SAAC,GAAoC,IAAlCE,EAAiC,EAAjCA,SAAUI,EAAuB,EAAvBA,iBAC/B,OACE,oBAAII,UAAWC,IAAOC,GAAtB,SACGV,EAASW,KAAI,gBAAGN,EAAH,EAAGA,GAAIO,EAAP,EAAOA,KAAMC,EAAb,EAAaA,OAAb,OACZ,qBAAIL,UAAWC,IAAOK,GAAIF,KAAMA,EAAhC,UACGA,EADH,KACWC,EACT,wBACEL,UAAWC,IAAOM,OAClBC,KAAK,SACLC,QAAS,kBAAMb,EAAiBC,IAHlC,sBAFyCA,W,iBCqBpCP,eARS,SAAAC,GAAK,MAAK,CAChCmB,MAAOjB,IAAkBkB,UAAUpB,OAGV,SAAAI,GAAQ,MAAK,CACtCiB,SAAU,SAAAC,GAAC,OAAIlB,EAASmB,YAAaD,EAAEE,OAAOL,YAGjCpB,EAzBA,SAAC,GAAD,IAAGoB,EAAH,EAAGA,MAAOE,EAAV,EAAUA,SAAV,OACb,wBAAOZ,UAAWC,IAAOe,MAAzB,kCAEE,uBACEhB,UAAWC,IAAOgB,MAClBT,KAAK,OACLE,MAAOA,EACPE,SAAUA,UCDVM,EAAY,CAChBC,QAAS,OACTC,WAAY,WACZC,aAAc,IAGD,SAASC,EAAaC,GACnC,IAAM5B,EAAW6B,cACXC,EAAoBC,YAAYjC,IAAkBkC,YAOxD,OAFAC,qBAAU,kBAAMjC,EAASG,IAAmB+B,mBAAkB,CAAClC,IAG7D,eAACmC,EAAA,EAAD,WACE,sBAAKC,MAAOb,EAAZ,UACE,cAAC,EAAD,IAECO,GAAqB,8FAGxB,cAAC,EAAD","file":"static/js/ContactsView.2317c544.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"li\":\"ContactList_li___DVp4\",\"ul\":\"ContactList_ul__3-wI9\",\"button\":\"ContactList_button__1vHKq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__3Hdua\",\"input\":\"Filter_input__iabIq\"};","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './ContactList.module.scss';\r\nimport { connect } from 'react-redux';\r\nimport { contactsOperations, contactsSelectors } from '../../redux/contacts';\r\n\r\nconst ContactList = ({ contacts, onDeleteContacts }) => {\r\n  return (\r\n    <ul className={styles.ul}>\r\n      {contacts.map(({ id, name, number }) => (\r\n        <li className={styles.li} name={name} key={id}>\r\n          {name}: {number}\r\n          <button\r\n            className={styles.button}\r\n            type=\"button\"\r\n            onClick={() => onDeleteContacts(id)}\r\n          >\r\n            Delete\r\n          </button>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n    }).isRequired,\r\n  ).isRequired,\r\n  onDeleteContacts: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  contacts: contactsSelectors.getVisibleContacts(state),\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onDeleteContacts: id => dispatch(contactsOperations.deleteContacts(id)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './Filter.module.scss';\r\nimport { connect } from 'react-redux';\r\nimport { contactsSelectors, changeFilter } from '../../redux/contacts';\r\n\r\nconst Filter = ({ value, onChange }) => (\r\n  <label className={styles.label}>\r\n    Find contacts by name\r\n    <input\r\n      className={styles.input}\r\n      type=\"text\"\r\n      value={value}\r\n      onChange={onChange}\r\n    />\r\n  </label>\r\n);\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  value: contactsSelectors.getFilter(state),\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onChange: e => dispatch(changeFilter(e.target.value)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\r\n","import {  useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport Container from '../components/Container';\r\nimport ContactList from '../components/ContactList'\r\n// import TodoEditor from '../components/TodoEditor';\r\nimport Filter from '../components/Filter';\r\n\r\n// import IconButton from '../components/IconButton';\r\n// import { ReactComponent as AddIcon } from '../icons/add.svg';\r\nimport { contactsOperations, contactsSelectors } from '../redux/contacts';\r\n\r\nconst barStyles = {\r\n  display: 'flex',\r\n  alignItems: 'flex-end',\r\n  marginBottom: 20,\r\n};\r\n\r\nexport default function ContactsView(params) {\r\n  const dispatch = useDispatch();\r\n  const isLoadingContacts = useSelector(contactsSelectors.getLoading);\r\n\r\n//   const [isModalOpen, setIsModalOpen] = useState(false);\r\n//   const toggleModal = () => setIsModalOpen(state => !state);\r\n\r\n  useEffect(() => dispatch(contactsOperations.fetchContacts()), [dispatch]);\r\n\r\n  return (\r\n    <Container>\r\n      <div style={barStyles}>\r\n        <Filter />   \r\n\r\n        {isLoadingContacts && <h1>Загружаем...</h1>}\r\n      </div>\r\n\r\n      <ContactList />\r\n\r\n      \r\n    </Container>\r\n  );\r\n}"],"sourceRoot":""}