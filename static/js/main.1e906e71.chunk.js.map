{"version":3,"sources":["components/ContactList/ContactList.module.scss","components/Filter/Filter.module.scss","components/Container/Container.module.css","reportWebVitals.js","components/Container/Container.js","UserMenu/Navigation.js","UserMenu/UserMenu.js","UserMenu/AuthNav.js","UserMenu/AppBar.js","views/HomeView.js","redux/auth/auth-operations.js","redux/auth/auth-slice.js","views/RegisterView.js","views/LoginView.js","redux/contacts/contacts-actions.js","redux/contacts/contacts-operation.js","redux/contacts/contacts-selectors.js","redux/contacts/contacts-reducer.js","components/ContactList/ContactList.js","components/Filter/Filter.js","views/ContactsView.js","App.js","redux/store.js","index.js"],"names":["module","exports","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Container","children","className","styles","container","link","display","textDecoration","padding","fontWeight","color","activeLink","Navigation","to","exact","style","activeStyle","alignItems","avatar","marginRight","name","UserMenu","onLogout","src","alt","width","type","onClick","AuthNav","header","justifyContent","borderBottom","AppBar","isAuthenticated","minHeight","title","fontSize","textAlign","HomeView","role","axios","defaults","baseURL","register","createAsyncThunk","credentials","a","post","data","logIn","logOut","fetchCurrentUser","_","thunkAPI","state","getState","auth","token","console","log","rejectWithValue","get","authSlice","createSlice","initialState","user","email","isLoggedIn","extraReducers","form","label","flexDirection","marginBottom","RegisterView","dispatch","useDispatch","useState","setName","setEmail","password","setPassword","handleChange","target","value","onSubmit","e","preventDefault","authOperations","autoComplete","onChange","LoginView","fetchContactsRequest","createAction","fetchContactsSuccess","fetchContactsError","addContactsRequest","addContactsSuccess","addContactsError","deleteContactsRequest","deleteContactsSuccess","deleteContactsError","changeFilter","id","delete","catch","error","getFilter","contacts","filter","contactsSelectors","getLoading","loading","getVisibleContacts","createSelector","items","normalizedFilter","toLowerCase","includes","createReducer","payload","some","contact","alert","combineReducers","connect","onDeleteContacts","contactsOperations","ul","map","number","li","button","input","barStyles","ContactsView","params","isLoadingContacts","useSelector","useEffect","App","path","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","authPersistConfig","key","storage","whitelist","store","configureStore","reducer","persistReducer","authReducer","contactsReducer","devTools","process","persistor","persistStore","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1e906e71.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"li\":\"ContactList_li___DVp4\",\"ul\":\"ContactList_ul__3-wI9\",\"button\":\"ContactList_button__1vHKq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__3Hdua\",\"input\":\"Filter_input__iabIq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__2BjZM\"};","const reportWebVitals = (onPerfEntry) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import PropTypes from 'prop-types';\nimport styles from './Container.module.css';\n\nconst Container = ({ children }) => (\n  <div className={styles.container}>{children}</div>\n);\n\nContainer.propTypes = {\n  children: PropTypes.array.isRequired,\n};\n\nexport default Container;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nconst styles = {\n  link: {\n    display: 'inline-block',\n    textDecoration: 'none',\n    padding: 12,\n    fontWeight: 700,\n    color: '#2A363B',\n  },\n  activeLink: {\n    color: '#E84A5F',\n  },\n};\n\nconst Navigation = () => (\n  <nav>\n    <NavLink to=\"/\" exact style={styles.link} activeStyle={styles.activeLink}>\n      Главная\n    </NavLink>\n\n    {/* <NavLink\n      to=\"/todos\"\n      exact\n      style={styles.link}\n      activeStyle={styles.activeLink}\n    >\n      Заметки\n    </NavLink> */}\n  </nav>\n);\n\nexport default Navigation;\n","import React from 'react';\n// import { connect } from 'react-redux';\n// import { authSelectors, authOperations } from '../../redux/auth';\n// import defaultAvatar from './default-avatar.png';\n\nconst styles = {\n  container: {\n    display: 'flex',\n    alignItems: 'center',\n  },\n  avatar: {\n    marginRight: 4,\n  },\n  name: {\n    fontWeight: 700,\n    marginRight: 12,\n  },\n};\n\nconst UserMenu = ({ avatar, name, onLogout }) => (\n  <div style={styles.container}>\n    <img src={avatar} alt=\"\" width=\"32\" style={styles.avatar} />\n    <span style={styles.name}>Welcome, {name}</span>\n    <button type=\"button\" onClick={onLogout}>\n      Logout\n    </button>\n  </div>\n);\n// const mapStateToProps = state => ({\n//   name: authSelectors.getUsername(state),\n//   avatar: defaultAvatar,\n// });\n\n// const mapDispatchToProps = {\n//   onLogout: authOperations.logOut,\n// };\n\n// export default connect(mapStateToProps, mapDispatchToProps)(UserMenu);\n\nexport default UserMenu;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nconst styles = {\n  link: {\n    display: 'inline-block',\n    textDecoration: 'none',\n    padding: 12,\n    fontWeight: 700,\n    color: '#2A363B',\n  },\n  activeLink: {\n    color: '#E84A5F',\n  },\n};\n\nconst AuthNav = () => (\n  <div>\n    <NavLink\n      to=\"/register\"\n      exact\n      style={styles.link}\n      activeStyle={styles.activeLink}\n    >\n      Регистрация\n    </NavLink>\n    <NavLink\n      to=\"/login\"\n      exact\n      style={styles.link}\n      activeStyle={styles.activeLink}\n    >\n      Логин\n    </NavLink>\n  </div>\n);\n\nexport default AuthNav;\n","import React from 'react';\n// import { connect } from 'react-redux';\nimport Navigation from './Navigation';\nimport UserMenu from './UserMenu';\nimport AuthNav from './AuthNav';\n// import { authSelectors } from '../redux/auth';\n\nconst styles = {\n  header: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    borderBottom: '1px solid #2A363B',\n  },\n};\n\nconst AppBar = ({ isAuthenticated }) => (\n  <header style={styles.header}>\n    <Navigation />\n    {isAuthenticated ? <UserMenu /> : <AuthNav />}\n  </header>\n);\n\n// const mapStateToProps = state => ({\n//   isAuthenticated: authSelectors.getIsAuthenticated(state),\n// });\n\n// export default connect(mapStateToProps)(AppBar);\n\nexport default AppBar;\n","import React from 'react';\n\nconst styles = {\n  container: {\n    minHeight: 'calc(100vh - 50px)',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  title: {\n    fontWeight: 500,\n    fontSize: 48,\n    textAlign: 'center',\n  },\n};\n\nconst HomeView = () => (\n  <div style={styles.container}>\n    <h1 style={styles.title}>\n      Приветственная страница нашего сервиса{' '}\n      <span role=\"img\" aria-label=\"Иконка приветствия\">\n        💁‍♀️\n      </span>\n    </h1>\n  </div>\n);\n\nexport default HomeView;\n","import axios from 'axios';\n// import authActions from './auth-actions';\nimport { createAsyncThunk } from '@reduxjs/toolkit';\n\naxios.defaults.baseURL = 'https://connections-api.herokuapp.com';\n\nconst register = createAsyncThunk('auth/register', async credentials => {\n  try {\n    const { data } = await axios.post('/users/signup', credentials);\n\n    return data;\n  } catch (error) {\n    // TODO: Добавить обработку ошибки error.message\n  }\n});\n\n/*\n * POST @ /users/login\n * body: { email, password }\n * После успешного логина добавляем токен в HTTP-заголовок\n */\nconst logIn = createAsyncThunk('auth/login', async credentials => {\n  try {\n    const { data } = await axios.post('/users/login', credentials);\n\n    return data;\n  } catch (error) {\n    // TODO: Добавить обработку ошибки error.message\n  }\n});\n\n/*\n * POST @ /users/logout\n * headers: Authorization: Bearer token\n * После успешного логаута, удаляем токен из HTTP-заголовка\n */\nconst logOut = createAsyncThunk('auth/logout', async () => {\n  try {\n    await axios.post('/users/logout');\n  } catch (error) {\n    // TODO: Добавить обработку ошибки error.message\n  }\n});\n\nconst fetchCurrentUser = createAsyncThunk(\n  'auth/refresh',\n  async (_, thunkAPI) => {\n    const state = thunkAPI.getState();\n    const persistedToken = state.auth.token;\n\n    if (persistedToken === null) {\n      console.log('Токена нет, уходим из fetchCurrentUser');\n      return thunkAPI.rejectWithValue();\n    }\n\n    try {\n      const { data } = await axios.get('/users/current');\n      return data;\n    } catch (error) {\n      // TODO: Добавить обработку ошибки error.message\n    }\n  },\n);\n\n// const operations = {\n//   register,\n//   logOut,\n//   logIn,\n//   fetchCurrentUser,\n// };\n// export default operations;\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default { register, logIn, logOut, fetchCurrentUser };\n","import { createSlice } from '@reduxjs/toolkit';\n// import authOperations from './auth-operations';\n\nconst initialState = {\n  user: { name: null, email: null },\n  token: null,\n  isLoggedIn: false,\n};\n\nconst authSlice = createSlice({\n  name: 'auth',\n  initialState,\n  extraReducers: {},\n});\n\nexport default authSlice.reducer;\n","import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport { authOperations } from '../redux/auth';\n\nconst styles = {\n  form: {\n    width: 320,\n  },\n  label: {\n    display: 'flex',\n    flexDirection: 'column',\n    marginBottom: 15,\n  },\n};\n\nexport default function RegisterView() {\n  const dispatch = useDispatch();\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  const handleChange = ({ target: { name, value } }) => {\n    switch (name) {\n      case 'name':\n        return setName(value);\n      case 'email':\n        return setEmail(value);\n      case 'password':\n        return setPassword(value);\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    dispatch(authOperations.register({ name, email, password }));\n    setName('');\n    setEmail('');\n    setPassword('');\n  };\n\n  return (\n    <div>\n      <h1>Страница регистрации</h1>\n\n      <form onSubmit={handleSubmit} style={styles.form} autoComplete=\"off\">\n        <label style={styles.label}>\n          Имя\n          <input type=\"text\" name=\"name\" value={name} onChange={handleChange} />\n        </label>\n\n        <label style={styles.label}>\n          Почта\n          <input\n            type=\"email\"\n            name=\"email\"\n            value={email}\n            onChange={handleChange}\n          />\n        </label>\n\n        <label style={styles.label}>\n          Пароль\n          <input\n            type=\"password\"\n            name=\"password\"\n            value={password}\n            onChange={handleChange}\n          />\n        </label>\n\n        <button type=\"submit\">Зарегистрироваться</button>\n      </form>\n    </div>\n  );\n}\n","import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport { authOperations } from '../redux/auth';\n\nconst styles = {\n  form: {\n    width: 320,\n  },\n  label: {\n    display: 'flex',\n    flexDirection: 'column',\n    marginBottom: 15,\n  },\n};\n\nexport default function LoginView() {\n  const dispatch = useDispatch();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  const handleChange = ({ target: { name, value } }) => {\n    switch (name) {\n      case 'email':\n        return setEmail(value);\n      case 'password':\n        return setPassword(value);\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    dispatch(authOperations.logIn({ email, password }));\n    setEmail('');\n    setPassword('');\n  };\n\n  return (\n    <div>\n      <h1>Страница логина</h1>\n\n      <form onSubmit={handleSubmit} style={styles.form} autoComplete=\"off\">\n        <label style={styles.label}>\n          Почта\n          <input\n            type=\"email\"\n            name=\"email\"\n            value={email}\n            onChange={handleChange}\n          />\n        </label>\n\n        <label style={styles.label}>\n          Пароль\n          <input\n            type=\"password\"\n            name=\"password\"\n            value={password}\n            onChange={handleChange}\n          />\n        </label>\n\n        <button type=\"submit\">Войти</button>\n      </form>\n    </div>\n  );\n}\n","import { createAction } from '@reduxjs/toolkit';\n\nexport const fetchContactsRequest = createAction(\n  'contacts/fetchContactsRequest',\n);\nexport const fetchContactsSuccess = createAction(\n  'contacts/fetchContactsSuccess',\n);\nexport const fetchContactsError = createAction('contacts/fetchContactsError');\n\nexport const addContactsRequest = createAction('contacts/addContactsRequest');\nexport const addContactsSuccess = createAction('contacts/addContactsSuccess');\nexport const addContactsError = createAction('contacts/addContactsError');\n\nexport const deleteContactsRequest = createAction(\n  'contacts/deleteContactsRequest',\n);\nexport const deleteContactsSuccess = createAction(\n  'contacts/deleteContactsSuccess',\n);\nexport const deleteContactsError = createAction('contacts/deleteContactsError');\n\nexport const changeFilter = createAction('contacts/changeFilter');\n","import axios from 'axios';\n\nimport {\n  fetchContactsRequest,\n  fetchContactsSuccess,\n  fetchContactsError,\n  addContactsRequest,\n  addContactsSuccess,\n  addContactsError,\n  deleteContactsRequest,\n  deleteContactsSuccess,\n  deleteContactsError,\n} from './contacts-actions';\n\n// axios.defaults.baseURL = 'http://localhost:4040';\n\nconst fetchContacts = () => async dispatch => {\n  dispatch(fetchContactsRequest());\n\n  try {\n    const { data } = await axios.get('/contacts');\n    dispatch(fetchContactsSuccess(data));\n  } catch (error) {\n    dispatch(fetchContactsError(error));\n  }\n};\n\nconst addContacts =\n  ({ name, number }) =>\n  async dispatch => {\n    const contact = {\n      name,\n      number,\n    };\n    dispatch(addContactsRequest());\n\n    try {\n      const { data } = await axios.post('/contacts', contact);\n      dispatch(addContactsSuccess(data));\n    } catch (error) {\n      dispatch(addContactsError(error));\n    }\n  };\n\nconst deleteContacts = id => async dispatch => {\n  dispatch(deleteContactsRequest());\n\n  axios\n    .delete(`/contacts/${id}`)\n    .then(() => dispatch(deleteContactsSuccess(id)))\n    .catch(error => dispatch(deleteContactsError(error)));\n};\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default {\n  addContacts,\n  deleteContacts,\n  fetchContacts,\n};\n\n// const fetchContacts = () =>  dispatch => {\n//     dispatch(fetchContactsRequest());\n\n//     axios\n//         .get('/contacts')\n//         .then(({ data }) =>\n//             dispatch(fetchContactsSuccess(data)))\n//         .catch(error => dispatch(fetchContactsError(error)));\n\n// };\n\n// const addContacts = ({name, number}) => dispatch => {\n//     const contact = {\n//         name,\n//         number,\n//     };\n//     dispatch(addContactsRequest());\n\n//     axios\n//         .post('/contacts', contact)\n//         .then(({ data }) =>\n//             dispatch(addContactsSuccess(data)))\n//         .catch(error => dispatch(addContactsError(error)));\n\n// };\n\n// const deleteContacts = id => dispatch => {\n//     dispatch(deleteContactsRequest(id));\n//     axios\n//         .delete(`/contacts/${id}`)\n//         .then(() =>\n//             dispatch(deleteContactsSuccess(id)))\n//         .catch(error => dispatch(deleteContactsError(error)));\n\n// }\n","import { createSelector } from '@reduxjs/toolkit';\n\nconst getLoading = state => state.contacts.loading;\nconst getFilter = state => state.contacts.filter;\nconst getAllContacts = state => state.contacts.items;\n\nconst getVisibleContacts = createSelector(\n  [getAllContacts, getFilter],\n  (contacts, filter) => {\n    const normalizedFilter = filter.toLowerCase();\n\n    return contacts.filter(({ name }) =>\n      name.toLowerCase().includes(normalizedFilter),\n    );\n  },\n);\n// const getVisibleContacts = state => {\n//   const filter = getFilter(state);\n//   const normalizedFilter = filter.toLowerCase();\n//   const allContacts = getAllContacts(state);\n//   return allContacts.filter(({ name }) =>\n//     name.toLowerCase().includes(normalizedFilter),\n//   );\n// };\n\n// eslint-disable-next-line import/no-anonymous-default-export\nconst contactsSelectors = {\n  getLoading,\n  getFilter,\n  getVisibleContacts,\n};\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default contactsSelectors;\n","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\n\nimport {\n  fetchContactsRequest,\n  fetchContactsSuccess,\n  fetchContactsError,\n  addContactsRequest,\n  addContactsSuccess,\n  addContactsError,\n  deleteContactsRequest,\n  deleteContactsSuccess,\n  deleteContactsError,\n  changeFilter,\n} from './contacts-actions';\n\nconst items = createReducer([], {\n  [fetchContactsSuccess]: (_, { payload }) => payload,\n  [addContactsSuccess]: (state, { payload }) => {\n    const repeatСontact = state.some(contact => contact.name === payload.name);\n    if (repeatСontact) {\n      alert(`${payload.name} is already in contacts.`);\n      return state;\n    }\n    const contactsState = [...state, payload];\n    return contactsState;\n  },\n\n  [deleteContactsSuccess]: (state, { payload }) =>\n    state.filter(({ id }) => id !== payload),\n});\n\nconst filter = createReducer('', {\n  [changeFilter]: (_, { payload }) => payload,\n});\n\nconst loading = createReducer(false, {\n  [fetchContactsRequest]: () => true,\n  [fetchContactsSuccess]: () => false,\n  [fetchContactsError]: () => false,\n  [addContactsRequest]: () => true,\n  [addContactsSuccess]: () => false,\n  [addContactsError]: () => false,\n  [deleteContactsRequest]: () => true,\n  [deleteContactsSuccess]: () => false,\n  [deleteContactsError]: () => false,\n});\n\nconst error = createReducer(null, {\n  [fetchContactsError]: (_, { payload }) => payload,\n  [fetchContactsRequest]: () => null,\n});\n\nexport default combineReducers({\n  items,\n  filter,\n  loading,\n  error,\n});\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './ContactList.module.scss';\nimport { connect } from 'react-redux';\nimport { contactsOperations, contactsSelectors } from '../../redux/contacts';\n\nconst ContactList = ({ contacts, onDeleteContacts }) => {\n  return (\n    <ul className={styles.ul}>\n      {contacts.map(({ id, name, number }) => (\n        <li className={styles.li} name={name} key={id}>\n          {name}: {number}\n          <button\n            className={styles.button}\n            type=\"button\"\n            onClick={() => onDeleteContacts(id)}\n          >\n            Delete\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n    }).isRequired,\n  ).isRequired,\n  onDeleteContacts: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = state => ({\n  contacts: contactsSelectors.getVisibleContacts(state),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onDeleteContacts: id => dispatch(contactsOperations.deleteContacts(id)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './Filter.module.scss';\nimport { connect } from 'react-redux';\nimport { contactsSelectors, changeFilter } from '../../redux/contacts';\n\nconst Filter = ({ value, onChange }) => (\n  <label className={styles.label}>\n    Find contacts by name\n    <input\n      className={styles.input}\n      type=\"text\"\n      value={value}\n      onChange={onChange}\n    />\n  </label>\n);\n\nFilter.propTypes = {\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = state => ({\n  value: contactsSelectors.getFilter(state),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onChange: e => dispatch(changeFilter(e.target.value)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport Container from '../components/Container';\nimport ContactList from '../components/ContactList';\n// import TodoEditor from '../components/TodoEditor';\nimport Filter from '../components/Filter';\n\n// import IconButton from '../components/IconButton';\n// import { ReactComponent as AddIcon } from '../icons/add.svg';\nimport { contactsOperations, contactsSelectors } from '../redux/contacts';\n\nconst barStyles = {\n  display: 'flex',\n  alignItems: 'flex-end',\n  marginBottom: 20,\n};\n\nexport default function ContactsView(params) {\n  const dispatch = useDispatch();\n  const isLoadingContacts = useSelector(contactsSelectors.getLoading);\n\n  //   const [isModalOpen, setIsModalOpen] = useState(false);\n  //   const toggleModal = () => setIsModalOpen(state => !state);\n\n  useEffect(() => dispatch(contactsOperations.fetchContacts()), [dispatch]);\n\n  return (\n    <Container>\n      <div style={barStyles}>\n        <Filter />\n\n        {isLoadingContacts && <h1>Загружаем...</h1>}\n      </div>\n\n      <ContactList />\n    </Container>\n  );\n}\n","import { Switch, Route } from 'react-router-dom';\n\n// import { lazy, Suspense } from \"react\";\n\n// import Filter from './components/Filter';\n// import ContactList from './components/ContactList';\n// import ContactForm from './components/ContactForm';\nimport Container from './components/Container';\nimport AppBar from './UserMenu/AppBar';\n// import { useEffect } from 'react';\n// import { useDispatch } from 'react-redux';\n// import { contactsOperations } from './redux';\n// import { connect } from 'react-redux';\nimport HomeView from './views/HomeView';\nimport RegisterView from './views/RegisterView';\nimport LoginView from './views/LoginView';\nimport ContactsView from './views/ContactsView';\n\n//   const HomeView = lazy(() =>\n//   import('./views/HomeView'/* webpackChunkName: \"HomeView\"*/)\n// );\n// const RegisterView = lazy(() =>\n//   import('./views/RegisterView' /* webpackChunkName: \"RegisterView\" */)\n// );\n// const LoginView = lazy(() =>\n//   import('./views/LoginView' /* webpackChunkName: \"LoginView\" */)\n// );\n// const ContactsView = lazy(() =>\n//   import('./views/ContactsView' /* webpackChunkName: \"ContactsView\" */)\n// );\n\nfunction App() {\n  // const dispatch = useDispatch();\n  // useEffect(() => dispatch(contactsOperations.fetchContacts()), [dispatch]);\n  return (\n    <>\n      <Container>\n        <AppBar />\n\n        {/* <Suspense fallback={<div>Loading...</div>}> */}\n        <Switch>\n          <Route path=\"/\" exact>\n            <HomeView />\n          </Route>\n\n          <Route path=\"/register\">\n            <RegisterView />\n          </Route>\n\n          <Route path=\"/login\">\n            <LoginView />\n          </Route>\n\n          <Route path=\"/contacts\">\n            <ContactsView />\n          </Route>\n        </Switch>\n        {/* </Suspense> */}\n      </Container>\n\n      {/* <div>\n        <h1>Phonebook</h1>\n        <ContactForm />\n        <h2>Contacts</h2>\n        <Filter />\n        <ContactList />\n      </div> */}\n    </>\n  );\n}\n\n// const mapDispatchToProps = dispatch => ({\n//   fetchContacts: () => dispatch(contactsOperations.fetchContacts()),\n// });\n// export default connect(null, mapDispatchToProps)(App);\n\nexport default App;\n","import { contactsReducer } from './contacts';\nimport { authReducer } from './auth';\nimport { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport logger from 'redux-logger';\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\n\n// const contactsPersistConfig = {\n//   key: \"contacts\",\n//   storage,\n//   blacklist: [\"filter\"],\n// };\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n  logger,\n];\n\nconst authPersistConfig = {\n  key: 'auth',\n  storage,\n  whitelist: ['token'],\n};\n\nexport const store = configureStore({\n  reducer: {\n    auth: persistReducer(authPersistConfig, authReducer),\n    contacts: contactsReducer,\n  },\n  middleware,\n  devTools: process.env.NODE_ENV === 'development',\n});\n\nexport const persistor = persistStore(store);\n\n// eslint-disable-next-line import/no-anonymous-default-export\n// export default { store, persistor };\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport reportWebVitals from './reportWebVitals';\nimport 'modern-normalize/modern-normalize.css';\n\nimport './index.css';\nimport App from './App';\nimport { store, persistor } from './redux/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <BrowserRouter>\n          <App />\n        </BrowserRouter>\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\nreportWebVitals();\n"],"sourceRoot":""}